// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 . 2 2 . 2 2 . . . . . 2 
2 . . 2 . . 2 . . . . 2 . 2 . 2 
2 2 . . . . 2 . 2 2 2 2 . 2 . 2 
2 2 2 2 2 . 2 . . . . 2 . . . 2 
2 . . . . . . . 2 . . 2 . 2 2 2 
2 2 . 2 2 2 2 . 2 2 . . . 2 . 2 
2 2 . . 2 . 2 . . 2 . 2 . 2 . 2 
2 . . . 2 . . . . . . 2 . . . 2 
2 2 . . . . 2 2 . 2 . 2 . 2 . 2 
2 2 . . . . 2 . . . . . . 2 . 2 
2 2 2 . 2 2 2 . 2 2 . 2 2 2 . 2 
2 . 2 . 2 . . . . 2 . . . 2 . 2 
2 . . . . . 2 . . 2 . . . . . 2 
2 2 2 . 2 2 2 . . . . . . 2 . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.floorLight2,myTiles.tile1,sprites.dungeon.floorLight4], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile":
            case "tile1":return tile1;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
